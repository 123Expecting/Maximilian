//
//  maxiAtomKernel.h
//  maxiTestZone
//
//  Created by Chris on 13/09/2013.
//
//

#ifndef __maxiTestZone__maxiAtomKernel__
#define __maxiTestZone__maxiAtomKernel__

#include <iostream>
// This include pulls in everything you need to develop with OpenCL on OS X v10.7.
#include <OpenCL/opencl.h>
#include <vector>
#include <map>
// Include the header file generated by Xcode.  This header file contains the
//  kernel block declaration.
extern "C" {
    #include "gabor_kernel.cl.h"
}

class maxiAtomKernel {
public:
    
    maxiAtomKernel();
    ~maxiAtomKernel();
    void setup(int count);
    void addWindow(float *win, int size);
    void uploadWindows();
    void gaborSingle(float *output, float amp, float phase, float phaseInc, int pos, int count, int atomLength);
    void gaborBatch(float *output, int atomCount, float *amps, float *phases, float *phaseIncs, int *positions, int *atomLengths, int count);
    void gaborBatch2(float *output, std::vector<structAtomData> &atomDataBlock, int atomCount);
    int getMaxAtoms(){return maxAtoms;}
private:
    dispatch_queue_t queue;
    void *mem_in, *mem_out, *windowCache;
    std::vector<float> windows;
    std::map<int, int> windowIndexes;
    std::vector<int> atomWindowIndexes;
    void *mem_amps, *mem_phases, *mem_phaseIncs, *mem_positions, *mem_atomLengths, *mem_atomWindowIndexes;
    int maxAtoms;
    cl_ndrange rangeBatch;
    int bufferSize;
    void *mem_atomDataBlock;
};

#endif /* defined(__maxiTestZone__maxiAtomKernel__) */
